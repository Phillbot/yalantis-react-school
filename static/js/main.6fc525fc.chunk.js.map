{"version":3,"sources":["api/index.ts","components/pages/Home/index.tsx","functions/fetches.ts","actions/getRowAtction.ts","Router.tsx","reducers/getRowReducer.ts","reducers/index.ts","index.tsx","components/App/App.tsx"],"names":["Yalantis","getUsers","Home","props","state","error","isLoaded","userList","this","setState","bind","baseUrl","fetch","then","res","json","result","January","February","March","April","May","June","July","August","September","October","November","December","forEach","user","dob","birthMonth","moment","format","push","yalantisGetUsersFetch","monthAndCount","colors","i","Object","keys","length","month","count","values","slice","users","monthUserList","row","parseInt","className","Helmet","chartType","loader","data","concat","options","title","titleTextStyle","fontSize","fontName","is3D","pieSliceText","pieSliceTextStyle","bold","color","legend","tooltip","text","chartArea","left","top","width","height","chartEvents","eventName","callback","chartWrapper","google","chart","getChart","visualization","events","addListener","e","getRowToDispatch","map","id","firstName","lastName","key","Component","connect","getRowReducer","dispatch","type","payload","getRowAtction","Router","exact","path","component","render","to","InitialState","rootReducer","combineReducers","action","store","createStore","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.6fc525fc.chunk.js","sourcesContent":["export const Yalantis = {\n  baseUrl: \"https://yalantis-react-school.herokuapp.com/api/\",\n  get: {\n    getUsers: \"task0/users\"\n  }\n};\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { connect } from \"react-redux\";\nimport { yalantisGetUsersFetch } from \"../../../functions/fetches\";\nimport moment from \"moment\";\nimport { IHomeProps, IHomeState } from \"../../../Interfaces\";\nimport getRowAtction from \"../../../actions/getRowAtction\";\nimport { Chart } from \"react-google-charts\";\nimport \"./home.scss\";\n\nclass Home extends Component<IHomeProps, IHomeState> {\n  constructor(props: IHomeProps) {\n    super(props);\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      userList: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState = this.setState.bind(this);\n    yalantisGetUsersFetch(this.setState);\n  }\n\n  render() {\n    const { error, isLoaded, userList } = this.state;\n    if (error) {\n      return <div>Ошибка: {error}</div>;\n    } else if (!isLoaded) {\n      return <div>Загрузка...</div>;\n    } else {\n      let monthAndCount: any[] = [];\n      let colors: any[] = [];\n\n      for (let i = 0; i < Object.keys(userList).length; i++) {\n        const month = Object.keys(userList)[i];\n        const count: any = Object.values(userList)[i];\n\n        monthAndCount.push([month.slice(0, 3), count.length]);\n      }\n\n      for (let i = 0; i < Object.values(userList).length; i++) {\n        const users: any = Object.values(userList)[i];\n\n        if (users.length < 2) {\n          colors.push(\"#bdbdbd\");\n        } else if (users.length > 2 && users.length <= 6) {\n          colors.push(\"#3f51b5\");\n        } else if (users.length > 6 && users.length <= 10) {\n          colors.push(\"#4caf50\");\n        } else if (users.length >= 11) {\n          colors.push(\"#f44336\");\n        }\n      }\n\n      const monthUserList: any =\n        this.props.row !== null\n          ? Object.values(userList)[parseInt(this.props.row)]\n          : false;\n\n      return (\n        <div className=\"home container-fluid\">\n          <Helmet>\n            <title>Yalantis React School </title>\n          </Helmet>\n\n          <div className=\"row\">\n            <div className=\"col l7 s12\">\n              <Chart\n                className=\"chart\"\n                chartType=\"PieChart\"\n                loader={<div>Loading Chart</div>}\n                data={[[\"month\", \"users\"]].concat(monthAndCount)}\n                options={{\n                  title: \"Yalantis Users\",\n                  titleTextStyle: {\n                    fontSize: 22\n                  },\n                  fontName: \"Ubuntu\",\n                  is3D: true,\n                  pieSliceText: \"label\",\n                  pieSliceTextStyle: {\n                    fontSize: 14,\n                    bold: true,\n                    color: \"#fff\"\n                  },\n                  legend: \"none\",\n                  tooltip: {\n                    text: \"both\"\n                  },\n                  colors,\n                  chartArea: {\n                    left: 0,\n                    top: 50,\n                    width: \"100%\",\n                    height: \"100%\"\n                  }\n                }}\n                chartEvents={[\n                  {\n                    eventName: \"ready\",\n                    callback: ({ chartWrapper, google }) => {\n                      const chart: any = chartWrapper.getChart();\n                      google.visualization.events.addListener(\n                        chart,\n                        \"onmouseover\",\n                        (e: any) => {\n                          const { row } = e;\n                          this.props.getRowToDispatch(row);\n                        }\n                      );\n                      google.visualization.events.addListener(\n                        chart,\n                        \"onmouseout\",\n                        (e: any) => {\n                          this.props.getRowToDispatch(null);\n                        }\n                      );\n                    }\n                  }\n                ]}\n              />\n            </div>\n            <div className=\"col l4 s12 users-container\">\n              {this.props.row !== null ? (\n                <h4 className=\"center\">\n                  {Object.keys(userList)[parseInt(this.props.row)]}\n                </h4>\n              ) : (\n                \"\"\n              )}\n\n              {this.props.row !== null ? (\n                <table className=\"centered\">\n                  <thead>\n                    <tr>\n                      <th>First Name</th>\n                      <th>Last Name</th>\n                      <th>Birsday</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {monthUserList.map((users: any) => {\n                      const { id, firstName, lastName, dob } = users;\n\n                      return (\n                        <tr key={id}>\n                          <td>{firstName}</td>\n                          <td>{lastName}</td>\n                          <td>\n                            {moment(dob, \"YYYY-MM-DD HH:mm:ss\").format(\n                              \"YYYY-MM-DD\"\n                            )}\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              ) : (\n                <h4 className=\"center\"> Hover month to see data </h4>\n              )}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToPRops = (state: any) => {\n  return {\n    row: state.getRowReducer.row\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Function) => {\n  return {\n    getRowToDispatch: (row: string) => {\n      dispatch(getRowAtction(row));\n    }\n  };\n};\n\nexport default connect(mapStateToPRops, mapDispatchToProps)(Home);\n","import { Yalantis } from \"../api\";\nimport { IYalantisGetUsers } from \"../Interfaces/index\";\nimport moment from \"moment\";\n\nexport const yalantisGetUsersFetch = (setState: Function): void => {\n  const {\n    baseUrl,\n    get: { getUsers }\n  } = Yalantis;\n\n  fetch(`${baseUrl}${getUsers}`)\n    .then(res => res.json())\n    .then(\n      result => {\n        const userList = {\n          January: [],\n          February: [],\n          March: [],\n          April: [],\n          May: [],\n          June: [],\n          July: [],\n          August: [],\n          September: [],\n          October: [],\n          November: [],\n          December: []\n        } as any;\n\n        result.forEach((user: IYalantisGetUsers) => {\n          const { dob } = user;\n\n          const birthMonth: string = moment(dob, \"YYYY-MM-DD HH:mm:ss\").format(\n            \"MM\"\n          );\n\n          const {\n            January,\n            February,\n            March,\n            April,\n            May,\n            June,\n            July,\n            August,\n            September,\n            October,\n            November,\n            December\n          } = userList;\n\n          switch (birthMonth) {\n            case \"01\":\n              January.push(user);\n              break;\n            case \"02\":\n              February.push(user);\n              break;\n            case \"03\":\n              March.push(user);\n              break;\n            case \"04\":\n              April.push(user);\n              break;\n            case \"05\":\n              May.push(user);\n              break;\n            case \"06\":\n              June.push(user);\n              break;\n            case \"07\":\n              July.push(user);\n              break;\n            case \"08\":\n              August.push(user);\n              break;\n            case \"09\":\n              September.push(user);\n              break;\n            case \"10\":\n              October.push(user);\n              break;\n            case \"11\":\n              November.push(user);\n              break;\n            case \"12\":\n              December.push(user);\n              break;\n\n            default:\n              break;\n          }\n        });\n\n        setState({\n          isLoaded: true,\n          userList\n        });\n      },\n      error => {\n        setState({\n          isLoaded: true,\n          error: true\n        });\n      }\n    );\n};\n","export default function getRowAtction(row: string) {\n  return {\n    type: \"ROW\",\n    payload: row\n  };\n}\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Home from \"./components/pages/Home\";\n\nexport default function Router() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"*\" render={() => <Redirect to=\"/\" />} />\n    </Switch>\n  );\n}\n","const InitialState = {\n  row: null\n};\n\nexport default function getRowReducer(state: {} = InitialState, action: any) {\n  switch (action.type) {\n    case \"ROW\":\n      return { ...state, row: action.payload };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport getRowReducer from \"./getRowReducer\";\n\nconst rootReducer = combineReducers({\n  getRowReducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Router from \"../../Router\";\nimport \"materialize-css/dist/css/materialize.min.css\";\n\nimport \"./app.scss\";\n\nexport default function App() {\n  return (\n    <BrowserRouter basename=\"yalantis-react-school\">\n      <div className=\"app\">\n        <Router />\n      </div>\n    </BrowserRouter>\n  );\n}\n"],"sourceRoot":""}